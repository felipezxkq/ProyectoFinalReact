{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nico\\\\Documents\\\\React\\\\Proyecto\\\\ProyectoFinalReact\\\\front\\\\src\\\\Registro.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Grid, Button, Typography, TextField } from '@material-ui/core';\nimport \"typeface-roboto\";\nimport { render } from \"react-dom\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Registro() {\n  _s();\n\n  const [especialidades, setEspecialidad] = useState([]);\n  const [especialistas, setEspecialistas] = useState([]);\n  const [selectespecialidades, setSEspecialidad] = useState([]);\n\n  const handleInputChangeSelectEspecialidad = (event, value) => {\n    setSEspecialidad(value);\n    getEspecialista();\n\n    for (var especialista of especialistas) {\n      console.log(especialista.nombre);\n      options2.push({\n        label: especialista.nombre,\n        value: especialista._id\n      });\n    }\n  };\n\n  useEffect(() => {\n    getEspecialidad();\n    getEspecialista();\n  }, []);\n\n  async function getEspecialidad() {\n    try {\n      const response = await axios.get('http://localhost:5000/api/especialidad/');\n\n      if (response.status == 200) {\n        console.log(\"obtiene marcas\");\n        setEspecialidad(response.data.especialidad);\n      }\n    } catch (error) {}\n  }\n\n  async function getEspecialista() {\n    try {\n      const response = await axios.get('http://localhost:5000/api/especialista/');\n\n      if (response.status == 200) {\n        console.log(\"obtiene especialistas\");\n        setEspecialistas(response.data.especialistaconespecialidad);\n      }\n    } catch (error) {}\n  }\n\n  const options = [];\n\n  for (var especialidad of especialidades) {\n    options.push({\n      label: especialidad.Descripcion,\n      value: especialidad._id\n    });\n  }\n\n  const options2 = [];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      md: 6,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Sistema de Agendamiento\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          ms: 6,\n          fullWidth: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"outlined-required\",\n            label: \"Required\",\n            defaultValue: \"Rut Paciente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          ms: 6,\n          fullWidth: true,\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            disablePortal: true,\n            id: \"combo-box-demo\",\n            options: options,\n            onChange: handleInputChangeSelectEspecialidad,\n            getOptionLabel: option => option.label,\n            sx: {\n              width: 300\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              label: \"Especialidad\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          ms: 6,\n          fullWidth: true,\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            disablePortal: true,\n            id: \"combo-box-demo\",\n            options: options2,\n            onChange: handleInputChangeSelectEspecialidad,\n            getOptionLabel: option => option.label,\n            sx: {\n              width: 300\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              label: \"Especialidad\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          ms: 2,\n          fullWidth: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Siguiente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Registro, \"moD1mbe55+hP7H9+imKYw5C42LI=\");\n\n_c = Registro;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registro\");","map":{"version":3,"sources":["C:/Users/Nico/Documents/React/Proyecto/ProyectoFinalReact/front/src/Registro.js"],"names":["React","useState","useEffect","Container","Grid","Button","Typography","TextField","render","Autocomplete","axios","Registro","especialidades","setEspecialidad","especialistas","setEspecialistas","selectespecialidades","setSEspecialidad","handleInputChangeSelectEspecialidad","event","value","getEspecialista","especialista","console","log","nombre","options2","push","label","_id","getEspecialidad","response","get","status","data","especialidad","error","especialistaconespecialidad","options","Descripcion","option","width","params"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Container, Grid, Button, Typography, TextField } from '@material-ui/core';\r\nimport \"typeface-roboto\";\r\nimport { render } from \"react-dom\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport default function Registro(){\r\n    const [especialidades, setEspecialidad] = useState([])\r\n    const [especialistas, setEspecialistas] = useState([])\r\n    const [selectespecialidades, setSEspecialidad] = useState([])\r\n\r\n    const handleInputChangeSelectEspecialidad = (event, value)=>{\r\n        setSEspecialidad(value)\r\n        getEspecialista()\r\n        for (var especialista of especialistas){\r\n            console.log(especialista.nombre)\r\n            options2.push({label: especialista.nombre, value: especialista._id})\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getEspecialidad();\r\n        getEspecialista();\r\n    },[])\r\n\r\n    async function getEspecialidad() {\r\n        try {\r\n          const response = await axios.get('http://localhost:5000/api/especialidad/');\r\n          if(response.status == 200)\r\n          {\r\n            console.log(\"obtiene marcas\");\r\n            setEspecialidad(response.data.especialidad);\r\n          }     \r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n    async function getEspecialista() {\r\n        try {\r\n          const response = await axios.get('http://localhost:5000/api/especialista/');\r\n          if(response.status == 200)\r\n          {\r\n            console.log(\"obtiene especialistas\");\r\n            setEspecialistas(response.data.especialistaconespecialidad);\r\n          }     \r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n    const options=[]\r\n    for (var especialidad of especialidades){\r\n        options.push({label: especialidad.Descripcion, value: especialidad._id})\r\n    }\r\n    const options2=[]\r\n    \r\n\r\n    return(\r\n        <Container maxWidth=\"md\">\r\n            <Grid item xs={6} md={6}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} md={8}>\r\n                        <Typography variant=\"h6\">\r\n                            Sistema de Agendamiento\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} ms={6} fullWidth>\r\n                        <TextField required id=\"outlined-required\" label=\"Required\" defaultValue=\"Rut Paciente\"/>\r\n                    </Grid>\r\n                    <Grid item xs={12} ms={6} fullWidth>\r\n                        <Autocomplete\r\n                            disablePortal\r\n                            id=\"combo-box-demo\"\r\n                            options={options}\r\n                            onChange={handleInputChangeSelectEspecialidad}\r\n                            getOptionLabel={(option) => option.label}\r\n                            sx={{ width: 300 }}\r\n                            renderInput={(params) => <TextField {...params} label=\"Especialidad\" />}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} ms={6} fullWidth>\r\n                        <Autocomplete\r\n                            disablePortal\r\n                            id=\"combo-box-demo\"\r\n                            options={options2}\r\n                            onChange={handleInputChangeSelectEspecialidad}\r\n                            getOptionLabel={(option) => option.label}\r\n                            sx={{ width: 300 }}\r\n                            renderInput={(params) => <TextField {...params} label=\"Especialidad\" />}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={3} ms={2} fullWidth>\r\n                        <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        >\r\n                            Siguiente\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid> \r\n        </Container>\r\n        \r\n    )    \r\n}"]},"metadata":{},"sourceType":"module"}